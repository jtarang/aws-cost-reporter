name: CI Pipeline

on:
  push: {}
  workflow_dispatch: {}
  pull_request:



jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install dependencies
        run: uv venv && uv pip install .

      - name: Run Linter (ruff)
        run: uv pip install ruff && uv run ruff check $GITHUB_WORKSPACE/src  .


  build:
    name: Build Package
    runs-on: ubuntu-latest
    needs: lint-and-test

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Extract Git commit hash and Set Variables
        id: version
        run: |
          SHORT_SHA=$(git rev-parse --short HEAD)
          echo "SHORT_SHA=$SHORT_SHA" >> $GITHUB_ENV
          echo "LAMBDA_ZIP_NAME=aws-cost-reporter-lambda-$SHORT_SHA.zip" >> $GITHUB_ENV
          echo "LAMBDA_BUILD_DIR=$GITHUB_WORKSPACE/build-dir" >> $GITHUB_ENV
          echo "LAMBDA_BUILD_OUTPUT_DIR=$GITHUB_WORKSPACE/build-output" >> $GITHUB_ENV

      - name: Install dependencies
        run: uv venv && uv pip install --target ${{ env.LAMBDA_BUILD_DIR }}} .

      - name: Build Package
        run: mkdir -p ${{ env.LAMBDA_BUILD_OUTPUT_DIR }} && zip -r9 "${{ env.LAMBDA_BUILD_OUTPUT_DIR }}/${{ env.LAMBDA_ZIP_NAME }}" .
        working-directory: ${{ env.LAMBDA_BUILD_DIR }}

      - uses: actions/upload-artifact@v4
        with:
          name: aws-cost-reporter-lambda-${{ env.SHORT_SHA }}
          overwrite: 'true'
          path: "${{ env.LAMBDA_BUILD_OUTPUT_DIR }}/${{ env.LAMBDA_ZIP_NAME }}"
          if-no-files-found: error
